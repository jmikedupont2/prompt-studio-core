// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`a node can run its children multiple times 1`] = `
{
  "n1": {
    "input": {
      "data": "",
    },
  },
  "n2": {
    "input": {
      "list": [
        "a",
        "b",
      ],
    },
    "status": "idle",
  },
  "n3": {
    "input": {
      "data": "b",
    },
  },
  "n4": {
    "input": {
      "data": "b",
    },
  },
}
`;

exports[`a node can run its children multiple times 2 1`] = `
{
  "n0": {
    "input": {
      "data": "",
    },
  },
  "n1": {
    "input": {
      "list": [
        "a",
        "b",
      ],
    },
    "status": "idle",
  },
  "n2": {
    "input": {
      "data": "",
      "list": [
        "a",
        "b",
      ],
    },
  },
  "n3": {
    "input": {
      "data": [
        "a",
        "b",
      ],
    },
  },
}
`;

exports[`avoid hanging on loops 1`] = `
{
  "n1": {
    "input": {
      "data": "Hello {{World}}",
    },
  },
}
`;

exports[`can handle input from multiple origins 1`] = `
{
  "n1": {
    "input": {
      "data": "Hello {{World}}",
    },
  },
  "n2": {
    "input": {
      "data": "Hello {{World}}",
    },
  },
  "n3": {
    "input": {
      "data1": "Hello {{World}}",
      "data2": "Hello {{World}}",
    },
  },
}
`;

exports[`can resolve variables correctly 1`] = `
{
  "n1": {
    "input": {
      "data": "\${{ps:ref:file:MY_FILE}} {{keep}}",
    },
    "status": "idle",
  },
  "n2": {
    "input": {
      "data": "INSERTED_FILE {{keep}}",
    },
  },
}
`;

exports[`correctly map output from one node onto another 1`] = `
{
  "n1": {
    "input": {
      "data": "test data",
    },
  },
  "n2": {
    "input": {
      "data1": "test data",
      "data2": "",
    },
  },
  "n3": {
    "input": {
      "data": "test data",
    },
  },
}
`;

exports[`do not run an executable node unless the parent was run already 1`] = `
{
  "n2": {
    "input": {
      "data": "",
    },
  },
}
`;

exports[`ignore inputs from nested unreachable nodes 1`] = `
{
  "n1": {
    "input": {
      "data": "Hello {{World}}",
    },
  },
  "n4": {
    "input": {
      "data1": "Hello {{World}}",
      "data2": "",
    },
  },
  "n5": {
    "input": {
      "data": "Hello {{World}}",
    },
  },
}
`;

exports[`ignore inputs from unreachable nodes 1`] = `
{
  "n1": {
    "input": {
      "data": "Hello {{World}}",
    },
  },
  "n3": {
    "input": {
      "data1": "Hello {{World}}",
      "data2": "",
    },
  },
  "n4": {
    "input": {
      "data": "Hello {{World}}",
    },
  },
}
`;

exports[`merge existing state on input 1`] = `
{
  "n1": {
    "input": {
      "data1": "IS_OVERWRITTEN",
      "data2": "KEEP",
    },
    "status": "idle",
  },
}
`;

exports[`nodes with an execution input are not run without an execution connection 1`] = `
{
  "n1": {
    "input": {
      "data": "Hello {{World}}",
    },
  },
}
`;

exports[`only run a node once all inputs are resolved 1`] = `
{
  "n1": {
    "input": {
      "data": "Hello {{World}}",
    },
  },
  "n2": {
    "input": {
      "data": "Hello {{World}}",
    },
  },
  "n3": {
    "input": {
      "data1": "Hello {{World}}",
      "data2": "Hello {{World}}",
    },
  },
  "n4": {
    "input": {
      "data": "Hello {{World}}",
    },
  },
}
`;

exports[`run a flow with a single node 1`] = `
{
  "n1": {
    "input": {
      "data": "Hello World",
    },
    "status": "idle",
  },
}
`;

exports[`run nodes connected through execution nodes 1`] = `
{
  "n1": {
    "input": {
      "data": "",
    },
  },
  "n2": {
    "input": {
      "data": "",
    },
  },
  "n3": {
    "input": {
      "data": "",
    },
  },
}
`;

exports[`running a node updates the input of its children 1`] = `
{
  "n1": {
    "input": {
      "data": "Hello {{World}}",
    },
  },
  "n2": {
    "input": {
      "data": "Hello {{World}}",
    },
  },
}
`;

exports[`running a node with a missing value does not override the default value in the target node 1`] = `
{
  "n1": {
    "input": {
      "data1": "TEST DATA",
    },
  },
  "n2": {
    "input": {
      "data1": "TEST DATA",
      "data2": "DEFAULT_DATA_2",
    },
  },
}
`;

exports[`running a node with several connections to a child should update the child correctly 1`] = `
{
  "n1": {
    "input": {
      "data": "TEST DATA",
    },
  },
  "n2": {
    "input": {
      "data1": "TEST DATA",
      "data2": "TEST DATA",
    },
  },
}
`;

exports[`should run even when lifecycle methods are missing 1`] = `
{
  "n1": {
    "input": {
      "data": "Hello World",
    },
    "status": "idle",
  },
}
`;

exports[`should throw error if the node is undefined 1`] = `[Error: Definition for node not_a_node not found]`;

exports[`update array variables 1`] = `
{
  "n2": {
    "input": {
      "data": "",
      "variables": [
        {
          "defaultValue": "test1",
          "description": "",
          "id": "world",
          "name": "world",
          "type": "text",
        },
        {
          "defaultValue": "test2",
          "description": "",
          "id": "hello",
          "name": "hello",
          "type": "text",
        },
      ],
    },
  },
}
`;

exports[`when running a flow in dataflow mode, do no run child executable nodes 1`] = `
{
  "n1": {
    "input": {
      "data": "",
    },
  },
  "n2": {
    "input": {
      "data": "",
    },
  },
}
`;
